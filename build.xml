<?xml version="1.0" encoding="UTF-8"?>
<project name="PublicationIndex">
  <!-- define ${target} by adding -Dtarget=\\servername\full\path\to\PI -->
  <!-- define ${testuri} by adding -Dtesturi=http://servername:port/xray/?dir=test&modules=&tests=&format=xunit -->
  <!-- define ${steps} by adding -Dsteps="clean build min" -->
  
  <!-- Environment property -->
  <property environment="ENV"/>
  
  <taskdef resource="net/sf/antcontrib/antlib.xml"/>
  
  <target name="build">
    <fail message="steps property not defined!" unless="steps"/>

    <!-- NPM is available -->
    <echo message="npm -v"/>
    <exec executable="npm.cmd" failonerror="true">
      <arg value="--no-color"/>  
      <arg value="--version"/>        
    </exec>

    <!-- NPM install if required, this will enforce the package.json versions -->
    <exec executable="npm.cmd" failonerror="true">
      <arg value="--no-color"/>  
      <arg value="install"/>        
    </exec>

    <!-- Cheking if grunt is available -->
    <exec executable="grunt.cmd" failonerror="true">
      <arg value="--no-color"/>  
      <arg value="--version"/>        
    </exec>

    <!-- run grunt -->
    <echo message="Politely ask Grunt to build the project"/>
    <exec executable="grunt.cmd" failonerror="true">
      <arg value="--no-color"/>           
      <arg value="${steps}"/>

      <!-- child processes outputs are not correty catched by ANT... -->
      <!-- see: http://stackoverflow.com/questions/1602616/how-can-i-ensure-all-output-from-ants-exec-task-goes-to-stdout -->
      <!--Next arg: forces node's stderror and stdout to a temporary file-->
      <arg line=" &gt; _tempfile.out 2&lt;&amp;1"/>

      <!--Next arg: If command exits with an error, then output the temporary file to stdout, -->
      <!--delete the temporary file and finally exit with error level 1 so that    -->
      <!--the apply task can catch the error if @failonerror="true"                -->
      <arg line=" || (type _tempfile.out &amp; del _tempfile.out &amp; exit /b 1)"/>

      <!--Next arg: Otherwise, just type the temporary file and delete it-->
      <arg line=" &amp; type _tempfile.out &amp; del _tempfile.out &amp;"/>

    </exec>
  </target>

  <target name="deploy">
    <fail message="target property not defined!" unless="target"/>
    <echo message="Deploy to ${target}"/>
    <sync todir="${target}" verbose="true">
      <fileset dir="${basedir}/build"/>
      <!-- Keep xray install in target -->
      <preserveintarget>
        <include name="xray/**"/>
      </preserveintarget>
    </sync>
  </target>
  
  <target name="test">
    <fail message="testuri property not defined!" unless="testuri"/>
    
    <property name="test.results.path" value="${basedir}\test-results"/>
    <property name="test.results.file" value="${test.results.path}\results.xml"/>
    
    <mkdir dir="${test.results.path}"/>
    <delete file="${test.results.file}" verbose="true"/>
    
    <echo message="Run xray testing on ${testuri}"/>
    <exec executable="${ENV.PATH_CURL}\curl.exe" failonerror="true">
      <arg value="-sS"/>
      <arg value="-o"/>
      <arg value="${basedir}\test-results\results.xml"/>
      <arg value="${testuri}"/>
    </exec>
  </target>
</project>